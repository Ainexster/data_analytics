version: '2'
services:
  mongo_host:
    image: mongo:4.1.6
    restart: always
    ports: ["27018:27017"]
    container_name: mongo_host
    networks:
      netology_network:
        aliases:
          - mongo_host
  postgres_host:
    image: postgres:10-alpine
    restart: always
    ports: ["5433:5432"]
    container_name: postgres_host
    networks:
      netology_network:
        aliases:
          - postgres_host
    volumes:
      - ${NETOLOGY_DATA}/pg_data:/var/lib/postgresql/data
  redis_host:
    image: redis:4.0.11-alpine
    restart: always
    ports: ["6380:6379"]
    container_name: redis_host
    networks:
      netology_network:
        aliases:
          - redis_host
  data-client:
    image: netologyds/data-client
    depends_on:
      - mongo_host
      - postgres_host
      - redis_host
    environment:
      - APP_MONGO_HOST=mongo_host
      - APP_MONGO_PORT=27017
      - APP_POSTGRES_HOST=postgres_host
      - APP_POSTGRES_PORT=5432
      - APP_REDIS_HOST=redis_host
      - APP_REDIS_PORT=6379
      - PGHOST=postgres_host
      - PGUSER=postgres
    volumes:
      - ${NETOLOGY_DATA}/raw_data:/data
    networks:
      - netology_network
    container_name: data-client
  flask-app:
    build:
      context: ./flask_app
    depends_on:
      - mongo_host
      - postgres_host
      - redis_host
    environment:
      - APP_MONGO_HOST=mongo_host
      - APP_MONGO_PORT=27017
      - APP_POSTGRES_HOST=postgres_host
      - APP_POSTGRES_PORT=5432
      - APP_REDIS_HOST=redis_host
      - APP_REDIS_PORT=6379
      - BIND_PORT=5001
    volumes:
      - ${NETOLOGY_DATA}/raw_data:/data
    container_name: flask-app
    networks:
      - netology_network
    entrypoint: ["/opt/conda/bin/python3", "/home/app.py"]

networks:
  netology_network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400